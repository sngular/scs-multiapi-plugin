openapi: 3.0.1
info:
  title: Payment Rules management
  description: Api for Payment Rules management
  version: 1.0.0
servers:
- url: 'https://localhost:8080'
paths:
  /rules:
    get:
      operationId: getAllRules
      description: Returns a list of rules
      tags:
      - rules
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Test'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        'default':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      operationId: createRule
      description: Create a new Rule
      tags:
      - rules
      requestBody:
        description: Rule to be created
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Test'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Test'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Error
          content:
            text/plain:
              schema:
                type: string
  /rule/{ruleId}:
    parameters:
    - name: ruleId
      in: path
      required: true
      description: Name of the Rule
      schema:
        type: integer
    put:
      operationId: updateRule
      description: Update a Rule
      tags:
      - rules
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        'default':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      description: Return the specified rule
      operationId: getSpecificRule
      tags:
      - rules
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Test'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      description: Returns a list of rules
      operationId: deleteRule
      tags:
      - rules
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        'default':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Test:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        tags:
          type: array
          items:
            type: string
        testTypeList:
          type: array
          items:
            $ref: '#/components/schemas/TestType'
        priority:
          type: integer
        testProcessor:
          $ref: '#/components/schemas/TestProcessor'
    TestType:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    TestProcessor:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    Error:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string