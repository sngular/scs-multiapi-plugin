plugins {
  id 'java-gradle-plugin'
  id 'com.gradle.plugin-publish' version '1.1.0'
  id 'maven-publish'
  id 'groovy'
  id 'jvm-test-suite'
  id 'checkstyle'
  id 'com.github.johnrengelman.shadow' version '7.1.2'
}

java {
  sourceCompatibility = JavaVersion.VERSION_11
  targetCompatibility = JavaVersion.VERSION_11
}

repositories {
  mavenLocal()
  mavenCentral()
  maven { url 'https://jitpack.io' }
}

group = 'com.sngular'
version = '5.4.1'

def SCSMultiApiPluginGroupId = group
def SCSMultiApiPluginVersion = version
def SCSMultiApiPluginArtifact = name

dependencies {
  shadow localGroovy()
  shadow gradleApi()

  implementation 'com.sngular:multiapi-engine:5.4.1'
  testImplementation 'org.assertj:assertj-core:3.24.2'
  testImplementation 'com.puppycrawl.tools:checkstyle:10.12.3'
}

jar {
  manifest {
    attributes 'Implementation-Title': 'Gradle Quickstart',
        'Implementation-Version': (archiveVersion ? archiveVersion : 'unknown'),
        'Main-Class': 'com.sngular.api.generator.plugin.ScsMultiApi'
  }
}

shadowJar {
  archiveBaseName.set('scs-multiapi-gradle-plugin')
  archiveClassifier.set('')
  manifest {
    inheritFrom project.tasks.jar.manifest
  }
}


tasks.register('sourcesJar', Jar) {
  archiveClassifier.set('sources')
  from sourceSets.main.allSource
}

tasks.register('javadocJar', Jar) {
  archiveClassifier.set('javadoc')
  from javadoc
}

tasks.withType(Test).configureEach {
  useJUnitPlatform()
}

artifacts {
  archives sourcesJar
  archives javadocJar
}

gradlePlugin {
  website.set('https://sngular.github.io/scs-multiapi-plugin/')
  vcsUrl.set('https://github.com/sngular/scs-multiapi-plugin')
  plugins {
    create('scsMultiApiPlugin') {
      id = 'com.sngular.scs-multiapi-gradle-plugin'
      displayName = 'SCS MultiApi Plugin'
      description = 'OpenApi/Asyncapi Generator tool for Spring Boot applications'
      implementationClass = 'com.sngular.api.generator.plugin.ScsMultiApi'
      tags.set(['openapi', 'asyncapi', 'spring', 'spring boot', 'generator', 'tool'])
    }
  }
}

checkstyle {
  toolVersion "10.12.3"
  configFile = file("../checkstyle.xml")
}

testing {
  suites {
    test {
      useJUnitJupiter()
    }

    integrationTest(JvmTestSuite) {
      dependencies {
        implementation 'com.sngular:scs-multiapi-gradle-plugin:5.4.1'
        implementation 'org.assertj:assertj-core:3.24.2'
      }

      targets {
        all {
          testTask.configure {
            shouldRunAfter(test)
          }
        }
      }
    }
  }
}

tasks.named('check') {
  dependsOn(testing.suites.integrationTest)
}

publishing {
  publications {
    shadow(MavenPublication) { publication ->
      project.shadow.component(publication)
    }
    publishMavenJavaToMavenLocal(MavenPublication) {
      from components.java
      pom {
        groupId = SCSMultiApiPluginGroupId
        artifactId = SCSMultiApiPluginArtifact
        version = SCSMultiApiPluginVersion
        name = 'SCS MultiApi Plugin'
        description = 'Grable Plugin for the SCS MultiApi Generator'
        url = 'https://sngular.github.io/scs-multiapi-plugin/'
      }
    }
    mavenJava(MavenPublication) {
      from components.java
      pom {
        groupId = SCSMultiApiPluginGroupId
        artifactId = SCSMultiApiPluginArtifact
        version = SCSMultiApiPluginVersion
        name = 'SCS MultiApi Plugin'
        description = 'Grable Plugin for the SCS MultiApi Generator'
        url = 'https://sngular.github.io/scs-multiapi-plugin/'

        licenses {
          license {
            name = 'Mozilla Public License, Version 2.0'
            url = 'https://www.mozilla.org/en-US/MPL/2.0/'
          }
        }

        scm {
          connection = 'scm:git:git@github.com:sngular/scs-multiapi-plugin.git'
          developerConnection = 'scm:git:git@github.com:sngular/scs-multiapi-plugin.git'
          url = 'scm:git:git@github.com:sngular/scs-multiapi-plugin.git'
        }

      }
    }
  }

  repositories {
    maven {
      name = 'localPluginRepository'
      url = '../local-plugin-repository'
    }
  }
}

