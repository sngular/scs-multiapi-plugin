name: Java CI with Maven (Push)

on:
  push:
    branches: [ main ]

jobs:
  check-version:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Check if version is updated
      uses: avides/actions-project-version-check@v1.3
      id: engine_version_check
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        file-to-check: multiapi-engine/pom.xml
      continue-on-error: true
    - name: Check if version is updated
      uses: avides/actions-project-version-check@v1.3
      id: maven_plugin_version_check
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        file-to-check: scs-multiapi-maven-plugin/pom.xml
      continue-on-error: true

  build:

    runs-on: ubuntu-latest
    if: ${{ always() && contains(join(needs.*.result, ','), 'success') }}
    needs: [check-version]
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_CENTRAL_TOKEN
          gpg-private-key: ${{ secrets.GPG_SIGNING_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build Engine Plugin
        run:  |
          cd multiapi-engine
          mvn -B install

      - name: Publish Maven Plugin to Maven Central Packages
        run: |
          cd scs-multiapi-maven-plugin
          mvn deploy
        env:
          MAVEN_USERNAME: ${{ secrets.JIRAID }}
          MAVEN_CENTRAL_TOKEN: ${{ secrets.JIRAPASS }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          SIGN_KEY: ${{ secrets.JIRAID }}
          SIGN_KEY_ID: ${{ secrets.JIRAPASS }}
          SIGN_KEY_PASS: ${{ secrets.GPG_PASSPHRASE }}

      - name: Maven version
        id: get-version
        run: "echo \"resolved-version=\
          $(mvn --file=./scs-multiapi-maven-plugin/pom.xml
          --quiet --non-recursive
          exec:exec -Dexec.executable=echo -Dexec.args='${project.version}')\" >> \"${GITHUB_OUTPUT}\""

      - name: Create a Release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          automatic_release_tag: ${{ steps.get-version.outputs.version }}
          prerelease: false
          title: "Mavem Release ${{ steps.get-version.outputs.version }}"