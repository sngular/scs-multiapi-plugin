openapi: 3.0.2
info:
  title: Faker API Service
  version: "1.0"
servers:
- url: https://localhost/v1
paths:
  /faker/generate-schemas:
    post:
      tags:
      - SchemaGenerator
      operationId: generateSchema
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Configuration'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FakerSchema'
        '400':
          description: Bad Request
        '404':
          description: Not found

components:
  schemas:
    Schema:
      type: object
      required:
      - subjectName
      - name
      properties:
        id:
          type: string
        subjectName:
          type: string
        name:
          type: string
        type:
          type: string
        original:
          type: boolean
        requiredFields:
          type: array
          items:
            type: string
        properties:
          type: array
          items:
            $ref: '#/components/schemas/Field'
        definitions:
          type: array
          items:
            $ref: '#/components/schemas/Field'
    FakerSchema:
      type: object
      required:
      - subjectName
      - name
      - value
      properties:
        id:
          type: string
        subjectName:
          type: string
        name:
          type: string
        type:
          type: string
        original:
          type: boolean
        requiredFields:
          type: array
          items:
            type: string
        properties:
          type: array
          items:
            $ref: '#/components/schemas/FakerField'
        definitions:
          type: array
          items:
            $ref: '#/components/schemas/FakerField'
    FakerField:
      type: object
      required:
      - name
      - type
      - value
      properties:
        name:
          type: string
        type:
          type: string
        value:
          type: object
    Field:
      type: object
      required:
      - name
      - type
      properties:
        name:
          type: string
        type:
          type: string
    
    Configuration:
      type: object
      properties:
        configuration:
          type: object
          additionalProperties:
            type: number
          example:
            "ES": 0.8
            "US": 0.2
        numberToGenerate:
          type: integer
          example: 100
        schema:
          $ref: '#/components/schemas/Schema'