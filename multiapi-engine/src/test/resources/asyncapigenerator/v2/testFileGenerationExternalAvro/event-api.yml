asyncapi: 2.3.0
info:
  title: Order Service
  version: 1.0.0
  description: Order management Service
  contact:
    name: API Support
    email: support@example.com
    url: https://example.com/support
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
servers:
  development:
    url: development.gigantic-server.com
    description: Development server
    protocol: kafka
    protocolVersion: 0.9.1
  staging:
    url: staging.gigantic-server.com
    description: Staging server
    protocol: kafka
    protocolVersion: 0.9.1
  production:
    url: api.gigantic-server.com
    description: Production server
    protocol: kafka
    protocolVersion: 0.9.1
channels:
  order/receipt:
    subscribe:
      operationId: "subscribeReceiptExternalAvro"
      description: "Subscribe to order receipts"
      message:
        payload:
          $ref: 'avro/Receipt.avsc'
  order/created:
    publish:
      operationId: "publishOperationExternalAvro"
      description: "Publish order created events"
      message:
        oneOf:
          - payload:
              $ref: 'avro/Order.avsc'
  order/createCommand:
    subscribe:
      operationId: "subscribeOperationExternalAvro"
      description: "Subscribe to order creation commands"
      message:
        oneOf:
          - $ref: '#/components/messages/CreateOrder'
components:
  messages:
    OrderCreated:
      payload:
        $ref: '#/components/schemas/Order'
    CreateOrder:
      payload:
        type: object
        properties:
          order:
            $ref: '#/components/schemas/Order'
          waiter:
            $ref: '#/components/schemas/Waiter'
  schemas:
    Waiter:
      type: object
      properties:
        ref:
          type: string
        timestamp:
          type: string
          format: 'dd/mm/yyyy hh:MM:sss'
        table:
          type: string
    Order:
      type: object
      properties:
        ref:
          type: string
        clientRef:
          type: string
        amount:
          type: string
          format: decimal
        lines:
          type: array
          items:
            $ref: '#/components/schemas/OrderLine'
    OrderLine:
      type: object
      required:
      - ref
      - products
      properties:
        ref:
          type: string
        products:
          type: array
          items:
            $ref: '#/components/schemas/OrderProduct'
    OrderProduct:
      type: object
      required:
      - ref
      - productRef
      - price
      - quantity
      properties:
        ref:
          type: string
        productRef:
          type: string
        price:
          type: string
          format: decimal
        quantity:
          type: string
          format: decimal
tags:
  - name: orders
    description: Order management operations