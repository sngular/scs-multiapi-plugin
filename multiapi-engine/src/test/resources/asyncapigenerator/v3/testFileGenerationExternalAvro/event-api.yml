asyncapi: 3.0.0
info:
  title: Order Service
  version: 1.0.0
  description: Order management Service
  contact:
    name: "API Support"
    email: "support@example.com"
  license:
    name: "Apache 2.0"
    url: "https://www.apache.org/licenses/LICENSE-2.0.html"
servers:
  development:
    host: development.gigantic-server.com
    protocol: kafka
    protocolVersion: 0.9.1
    description: Development server
  staging:
    host: staging.gigantic-server.com
    protocol: kafka
    protocolVersion: 0.9.1
    description: Staging server
  production:
    host: api.gigantic-server.com
    protocol: kafka
    protocolVersion: 0.9.1
    description: Production server
channels:
  orderReceipt:
    address: order/receipt
    description: "Channel for order receipt events"
    messages:
      ReceiptMessage:
        $ref: '#/components/messages/ReceiptMessage'
  orderCreated:
    address: order/created
    description: "Channel for order created events"
    messages:
      OrderMessage:
        $ref: '#/components/messages/OrderMessage'
  orderCreateCommand:
    address: order/createCommand
    description: "Channel for order creation commands"
    messages:
      CreateOrderMessage:
        $ref: '#/components/messages/CreateOrderMessage'
operations:
  subscribeReceiptExternalAvro:
    action: receive
    channel:
      $ref: '#/channels/orderReceipt'
    messages:
      - $ref: '#/components/messages/ReceiptMessage'
    description: "Subscribe to order receipt events"
    tags:
      - name: "order"
  publishOperationExternalAvro:
    action: send
    channel:
      $ref: '#/channels/orderCreated'
    messages:
      - $ref: '#/components/messages/OrderMessage'
    description: "Publish order created events"
    tags:
      - name: "order"
  subscribeOperationExternalAvro:
    action: receive
    channel:
      $ref: '#/channels/orderCreateCommand'
    messages:
      - $ref: '#/components/messages/CreateOrderMessage'
    description: "Subscribe to order creation commands"
    tags:
      - name: "order"
components:
  messages:
    ReceiptMessage:
      name: "ReceiptMessage"
      title: "Order Receipt Event"
      description: "Event containing order receipt information"
      contentType: "application/avro"
      payload:
        $ref: 'avro/Receipt.avsc'
    OrderMessage:
      name: "OrderMessage"
      title: "Order Created Event"
      description: "Event containing order information"
      contentType: "application/avro"
      payload:
        $ref: 'avro/Order.avsc'
    OrderCreated:
      name: "OrderCreated"
      title: "Order Created Event"
      description: "Event containing order information"
      contentType: "application/json"
      payload:
        $ref: '#/components/schemas/Order'
    CreateOrder:
      name: "CreateOrder"
      title: "Create Order Command"
      description: "Command to create a new order"
      contentType: "application/json"
      payload:
        type: object
        properties:
          order:
            $ref: '#/components/schemas/Order'
          waiter:
            $ref: '#/components/schemas/Waiter'
    CreateOrderMessage:
      name: "CreateOrderMessage"
      title: "Create Order Command Message"
      description: "Message containing order creation command"
      contentType: "application/json"
      $ref: '#/components/messages/CreateOrder'
  schemas:
    Waiter:
      type: object
      properties:
        ref:
          type: string
        timestamp:
          type: string
          format: 'dd/mm/yyyy hh:MM:sss'
        table:
          type: string
    Order:
      type: object
      properties:
        ref:
          type: string
        clientRef:
          type: string
        amount:
          type: string
          format: decimal
        lines:
          type: array
          items:
            $ref: '#/components/schemas/OrderLine'
    OrderLine:
      type: object
      required:
      - ref
      - products
      properties:
        ref:
          type: string
        products:
          type: array
          items:
            $ref: '#/components/schemas/OrderProduct'
    OrderProduct:
      type: object
      required:
      - ref
      - productRef
      - price
      - quantity
      properties:
        ref:
          type: string
        productRef:
          type: string
        price:
          type: string
          format: decimal
        quantity:
          type: string
          format: decimal
