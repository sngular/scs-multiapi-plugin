asyncapi: 3.0.0
info:
  title: Order Service
  version: 1.0.0
  description: Order management Service
servers:
  development:
    host: development.gigantic-server.com
    protocol: kafka
    protocolVersion: 0.9.1
    description: Development server
  staging:
    host: staging.gigantic-server.com
    protocol: kafka
    protocolVersion: 0.9.1
    description: Staging server
  production:
    host: api.gigantic-server.com
    protocol: kafka
    protocolVersion: 0.9.1
    description: Production server
channels:
  order/created:
    address: order/created
    messages:
      OrderCreatedEvent:
        $ref: '#/components/messages/OrderCreatedEvent'
  order/createCommand:
    address: order/createCommand
    messages:
      CreateOrderEvent:
        $ref: '#/components/messages/CreateOrderEvent'
operations:
  publishOrder:
    action: send
    channel:
      $ref: '#/channels/order~1created'
    messages:
      - $ref: '#/components/messages/OrderCreatedEvent'
  subscribeOrder:
    action: receive
    channel:
      $ref: '#/channels/order~1createCommand'
    messages:
      - $ref: '#/components/messages/CreateOrderEvent'
components:
  messages:
    OrderCreatedEvent:
      payload:
        $ref: '#/components/schemas/Order'
    CreateOrderEvent:
      payload:
        type: object
        properties:
          order:
            $ref: '#/components/schemas/Order'
          waiter:
            $ref: '#/components/schemas/Waiter'
  schemas:
    Waiter:
      type: object
      properties:
        ref:
          type: string
        timestamp:
          type: string
          format: 'dd/mm/yyyy hh:MM:sss'
        table:
          type: string
    Order:
      type: object
      properties:
        ref:
          type: string
        clientRef:
          type: string
        amount:
          type: string
          format: decimal
        lines:
          type: array
          items:
            $ref: '#/components/schemas/OrderLine'
    OrderLine:
      type: object
      required:
      - ref
      - products
      properties:
        ref:
          type: string
        products:
          type: array
          items:
            $ref: '#/components/schemas/OrderProduct'
    OrderProduct:
      type: object
      required:
      - ref
      - productRef
      - price
      - quantity
      properties:
        ref:
          type: string
        productRef:
          type: string
        price:
          type: string
          format: decimal
        quantity:
          type: string
          format: decimal